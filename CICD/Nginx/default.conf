# # HTTP 서버 설정
# server {
#     listen 80;
#     server_name nowdoboss.com www.nowdoboss.com;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#         try_files $uri $uri/ =404;
#     }

#     # 프론트엔드 설정
#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri $uri/ /index.html;
#     }

#     # 백엔드 프록시 설정
#     location /api {
#         proxy_pass http://nowdoboss-backend-springboot:8080;  
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# 동적 업스트림 설정
upstream dynamic_backend {
    zone backend_zone 64k;

    server nowdoboss-backend-springboot-blue:8081 max_fails=3 fail_timeout=5s;
    server nowdoboss-backend-springboot-green:8082 max_fails=3 fail_timeout=5s;
}

# HTTP 리다이렉션을 HTTPS로
server {
    listen 80;
    server_name nowdoboss.com www.nowdoboss.com;

    # Certbot 인증 경로는 리다이렉트하지 않도록 예외 처리
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri $uri/ =404;
    }

    # 그 외 모든 HTTP 요청은 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 서버 설정
server {
    listen 443 ssl;
    server_name nowdoboss.com www.nowdoboss.com;

    ssl_certificate /etc/letsencrypt/live/www.nowdoboss.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.nowdoboss.com/privkey.pem;

    # 보안 헤더 추가 (클릭재킹 방지, XSS 보호, MIME 타입 위조 방지)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # HSTS 설정 추가 (HTTPS만 사용하도록 강제)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;

    # 접속이 허용되지 않은 경우 403 Forbidden 반환
    if ($access_granted = 0) {
        return 403;
    }

    # 프론트엔드
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;

        # 특정 User-Agent 차단 (공격에 자주 사용되는 클라이언트)
        if ($http_user_agent ~* (curl|wget|python|java|libwww|httpclient)) {
            return 403;  # 403 Forbidden
        }
    }

    # 백엔드 API 프록시 (블루/그린 환경 지원 - 동적 프록시)
    location /api {
        proxy_pass http://dynamic_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SSE 설정 추가
    location /api/v1/sse/subscribe {
        proxy_pass http://dynamic_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection '';
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # 버퍼링 비활성화
    }

    # 웹소켓 프록시
    location /ws {
        proxy_pass http://dynamic_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}