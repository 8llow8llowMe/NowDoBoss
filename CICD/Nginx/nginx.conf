# GeoIP2 모듈 로드
load_module /usr/lib/nginx/modules/ngx_http_geoip2_module.so;

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # X-Forwarded-For 헤더를 사용해 클라이언트의 실제 IP 추출
    map $http_x_forwarded_for $real_ip {
        default $remote_addr;
    }

    # GeoIP2 설정 추가
    geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb {
        auto_reload 6h;
        $geoip2_data_country_code country iso_code;
    }

    # 국가 및 사설 IP에 대한 접근을 허용하는 map 설정
    map $geoip2_data_country_code $allow_country {
        default 0;
        KR 1;  # 한국 IP만 허용
    }

    # 사설 IP 허용 설정
    map $remote_addr $allow_private_ip {
        default 0;
        # 192.168.0.0/16 1;  # 사설 IP 대역 허용
        # 10.0.0.0/8 1;
        192.168.0.1 1;     # 게이트웨이 IP 직접 허용
    }

    # 접속을 허용하는 변수 설정
    map $allow_private_ip$allow_country $access_granted {
        10 1; # 사설 IP 또는 한국 IP가 허용되는 경우
        01 1; # 사설 IP가 허용되지 않지만 한국 IP인 경우
        default 0; # 그 외는 차단
    }

    # 클라이언트의 실제 IP를 인식하도록 설정 (real_ip 모듈)
    set_real_ip_from 192.168.0.0/16;  # 사설 네트워크 대역에서 오는 요청 신뢰
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;  # X-Forwarded-For의 마지막 IP를 실제 클라이언트 IP로 사용

    # Docker 내부 DNS 사용
    resolver 127.0.0.11 valid=30s;

    # backend_service 변수 동적 설정
    map $http_host $backend_service {
        default http://nowdoboss-backend-springboot-blue:8081;  # 기본값
        ~^.*green.* http://nowdoboss-backend-springboot-green:8082;
    }

    # HTTP -> HTTPS 리다이렉트 등과 같은 추가 설정
    include /etc/nginx/conf.d/*.conf;
}
