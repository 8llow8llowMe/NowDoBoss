pipeline {
    agent any
    triggers {
        GenericTrigger(
            genericVariables: [
                [key: 'USER_NAME', value: '$.pull_request.user.login', expressionType: 'JSONPath'],
                [key: 'IF_MERGED', value: '$.pull_request.merged', expressionType: 'JSONPath'],
                [key: 'BASE_BRANCH', value: '$.pull_request.base.ref', expressionType: 'JSONPath'],
                [key: 'LABEL', value: '$.pull_request.labels[*].name', expressionType: 'JSONPath']
            ],
            causeString: 'Triggered by GitHub Pull Request by ${USER_NAME}',
            token: 'nowdoboss-be-fastapi',
            printContributedVariables: false,
            printPostContent: false,
            regexpFilterText: '$IF_MERGED $BASE_BRANCH $LABEL',
            regexpFilterExpression: '(?=.*true)(?=.*develop)(?=.*BE-FastApi)'
        )
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    // 빌드 설명 설정
                    currentBuild.description = "Merge requested by: ${env.USER_NAME}"
                }
            }
        }

        stage('Transfer and Deploy on Sub Server') {
            steps {
                script {
                    // Publish Over SSH를 사용하여 Sub Server에 파일 전송 및 명령 실행
                    sshPublisher(
                        publishers: [
                            sshPublisherDesc(
                                configName: 'Sub Server SSH Key', // Publish Over SSH에서 설정한 Sub Server 이름
                                transfers: [
                                    sshTransfer(
                                        sourceFiles: 'BackEnd/FastApiServer/**/*', // Sub Server로 전송할 파일
                                        remoteDirectory: 'develop/infra/jenkins', // Sub Server에서 작업할 디렉터리
                                        execCommand: '''
                                            cd develop/infra/jenkins/BackEnd/FastApiServer
                                            chmod -R 755 .
                                            docker-compose -f docker-compose-fastapi.yml up --build -d
                                        ''' // Sub Server에서 실행할 명령어
                                    )
                                ],
                                verbose: true // 상세 로그 활성화
                            )
                        ]
                    )
                }
            }
        }
    }

    post {
        always {
            cleanWs() // 작업 공간 정리
        }
    }
}
